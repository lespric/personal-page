@charset "utf-8";

@mixin respond-to($breakpoint) {
  $raw-query: map-get($breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
      type-of($raw-query) == "string",
      unquote($raw-query),
      inspect($raw-query)
    );

    @media #{$query} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. '
    + 'Please make sure it is defined in `$breakpoints` map.';
  }
}
// 声明用于检测是否存在媒体查询范围的混合宏

@mixin col-bp {
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -ms-flex-positive: 1;
  flex-grow: 1;
  max-width: 100%;
}
// 声明各个断点的col无数字后缀的平分空间效果

@mixin col-auto {
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: auto;
  max-width: 100%;
}
// 声明各个断点的col-auto的自动填充效果

@mixin row {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}
// 声明行的通用样式


@mixin placeholder-color($ph-font-color) {
  &::-webkit-input-placeholder {
    color: $ph-font-color;
  }
  &:-moz-placeholder {
    color: $ph-font-color;
  }
  &::-moz-placeholder {
    color: $ph-font-color;
  }
  &:-ms-input-placeholder {
    color: $ph-font-color;
  }
}
// 声明输入框的提示文字颜色的混合宏

@mixin clearfix {
  &::after {
    content: "";
    display: block;
    clear: both;
  }
}
// 声明清除浮动的混合宏